Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = '/home/apprenant16/Bureau/Reminder/ReminderMobile/App.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNavigation = require('react-navigation');

var _Navigator = require('./services/Navigator');

var _Navigator2 = babelHelpers.interopRequireDefault(_Navigator);

var _NavigationApp = require('./NavigationApp');

var _ServerConfig = require('./ServerConfig');

var App = function (_Component) {
  babelHelpers.inherits(App, _Component);

  function App(props) {
    babelHelpers.classCallCheck(this, App);

    var _this = babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

    _this.state = {
      token: '',
      stickys: []
    };
    _this.handleToken = _this.handleToken.bind(_this);
    _this.handleAddSticky = _this.handleAddSticky.bind(_this);
    _this.handleGetStickys = _this.handleGetStickys.bind(_this);
    _this.handleEditSticky = _this.handleEditSticky.bind(_this);
    _this.handleDeleteSticky = _this.handleDeleteSticky.bind(_this);
    return _this;
  }

  babelHelpers.createClass(App, [{
    key: 'handleToken',
    value: function handleToken(token) {
      console.log('Token at App Level', token);
      this.setState({ token: token });
      _Navigator2.default.navigate('Dashboard');
    }
  }, {
    key: 'handleAddSticky',
    value: function handleAddSticky(sticky) {
      var _this2 = this;

      fetch('http://' + _ServerConfig.SERVER_IP + ':3001/stickys/add', {
        method: 'POST',
        headers: {
          'Authorization': this.state.token,
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(sticky)
      }).then(function (res) {
        return res.json();
      }).then(function (sticky) {
        _this2.setState(babelHelpers.extends({}, _this2.state, {
          stickys: [].concat(babelHelpers.toConsumableArray(_this2.state.stickys), [sticky])
        }));
        console.log(sticky);
      });
    }
  }, {
    key: 'handleGetStickys',
    value: function handleGetStickys() {
      var _this3 = this;

      fetch('http://' + _ServerConfig.SERVER_IP + ':3001/stickys/', {
        method: 'GET',
        headers: {
          'Authorization': this.state.token,
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      }).then(function (res) {
        return res.json();
      }).then(function (stickys) {
        _this3.setState(babelHelpers.extends({}, _this3.state, {
          stickys: stickys
        }));
        console.log(stickys);
      });
    }
  }, {
    key: 'handleEditSticky',
    value: function handleEditSticky(sticky) {
      var _this4 = this;

      fetch('http://' + _ServerConfig.SERVER_IP + ':3001/stickys/edit', {
        method: 'POST',
        headers: {
          'Authorization': this.state.token,
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(sticky)
      }).then(function (res) {
        return res.json();
      }).then(function (data) {
        return console.log(data);
      }).then(function () {
        _this4.handleGetStickys();
      });
    }
  }, {
    key: 'handleDeleteSticky',
    value: function handleDeleteSticky(sticky) {
      var _this5 = this;

      fetch('http://' + _ServerConfig.SERVER_IP + ':3001/stickys/delete', {
        method: 'DELETE',
        headers: {
          'Authorization': this.state.token,
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(sticky)
      }).then(function (res) {
        return res.json();
      }).then(function (data) {
        return console.log(data);
      }).then(function () {
        _this5.handleGetStickys();
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_NavigationApp.NavigationApp, {
        ref: function ref(navigatorRef) {
          _Navigator2.default.setContainer(navigatorRef);
        },
        screenProps: {
          handleToken: this.handleToken,
          handleAddSticky: this.handleAddSticky,
          handleGetStickys: this.handleGetStickys,
          handleEditSticky: this.handleEditSticky,
          handleDeleteSticky: this.handleDeleteSticky,
          stickys: this.state.stickys
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 101
        }
      });
    }
  }]);
  return App;
}(_react.Component);

exports.default = App;