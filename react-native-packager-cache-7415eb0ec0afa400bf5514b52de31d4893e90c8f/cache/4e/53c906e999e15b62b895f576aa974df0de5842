Object.defineProperty(exports, "__esModule", {
	value: true
});
var _jsxFileName = '/home/apprenant16/Bureau/Reminder/ReminderMobile/components/SignUp/SignUpForm/index.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _ServerConfig = require('./../../../ServerConfig');

var SignUpForm = function (_React$Component) {
	babelHelpers.inherits(SignUpForm, _React$Component);

	function SignUpForm(props) {
		babelHelpers.classCallCheck(this, SignUpForm);

		var _this = babelHelpers.possibleConstructorReturn(this, (SignUpForm.__proto__ || Object.getPrototypeOf(SignUpForm)).call(this, props));

		_this.state = {
			form: {
				username: '',
				email: '',
				password: ''
			},
			passwordConfirmed: false
		};
		_this.handleSubmit = _this.handleSubmit.bind(_this);
		_this.onChangeInfos = _this.onChangeInfos.bind(_this);
		_this.confirmPassword = _this.confirmPassword.bind(_this);
		console.log('SERVER_IP', _ServerConfig.SERVER_IP);
		return _this;
	}

	babelHelpers.createClass(SignUpForm, [{
		key: 'handleSubmit',
		value: function handleSubmit() {
			var _this2 = this;

			console.log('je suis ici');
			if (this.state.passwordConfirmed) {
				fetch('http://' + _ServerConfig.SERVER_IP + ':3001/users/signup', {
					method: 'POST',
					headers: {
						'Accept': 'application/json',
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(this.state.form)
				}).then(function (res) {
					return res.json();
				}).then(function (data) {
					return _this2.props.handleToken(data.token);
				}).catch(function (err) {
					return console.log(err);
				});
			} else {
				console.log('this.state.passwordConfirmed is', this.state.passwordConfirmed);
			}
		}
	}, {
		key: 'onChangeInfos',
		value: function onChangeInfos(value, state) {
			this.setState({ form: babelHelpers.extends({}, this.state.form, babelHelpers.defineProperty({}, state, value)) });
		}
	}, {
		key: 'confirmPassword',
		value: function confirmPassword(value) {
			if (value == this.state.form.password) {
				this.setState({ passwordConfirmed: true });
			} else {
				this.setState({ passwordConfirmed: false });
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this3 = this;

			var navigate = this.props.navigation.navigate;

			return _react2.default.createElement(
				_reactNative.View,
				{ style: styles.container, __source: {
						fileName: _jsxFileName,
						lineNumber: 63
					}
				},
				_react2.default.createElement(_reactNative.TextInput, {
					onChangeText: function onChangeText(value) {
						_this3.onChangeInfos(value, 'username');
					},
					placeholder: 'Username',
					underlineColorAndroid: 'transparent',
					style: styles.input,
					__source: {
						fileName: _jsxFileName,
						lineNumber: 64
					}
				}),
				_react2.default.createElement(_reactNative.TextInput, {
					onChangeText: function onChangeText(value) {
						_this3.onChangeInfos(value, 'email');
					},
					placeholder: 'E-mail',
					underlineColorAndroid: 'transparent',
					style: styles.input,
					__source: {
						fileName: _jsxFileName,
						lineNumber: 71
					}
				}),
				_react2.default.createElement(_reactNative.TextInput, {
					onChangeText: function onChangeText(value) {
						_this3.onChangeInfos(value, 'password');
					},
					placeholder: 'Password',
					underlineColorAndroid: 'transparent',
					secureTextEntry: true,
					style: styles.input,
					__source: {
						fileName: _jsxFileName,
						lineNumber: 78
					}
				}),
				_react2.default.createElement(_reactNative.TextInput, {
					onChangeText: function onChangeText(value) {
						_this3.confirmPassword(value);
					},
					placeholder: 'Password',
					underlineColorAndroid: 'transparent',
					secureTextEntry: true,
					style: styles.input,
					__source: {
						fileName: _jsxFileName,
						lineNumber: 86
					}
				}),
				_react2.default.createElement(
					_reactNative.View,
					{ style: styles.buttonContainer, __source: {
							fileName: _jsxFileName,
							lineNumber: 93
						}
					},
					_react2.default.createElement(
						_reactNative.TouchableOpacity,
						{ style: styles.button, onPress: function onPress() {
								return navigate('SignIn');
							}, __source: {
								fileName: _jsxFileName,
								lineNumber: 94
							}
						},
						_react2.default.createElement(
							_reactNative.Text,
							{ style: styles.buttonPrevious, __source: {
									fileName: _jsxFileName,
									lineNumber: 95
								}
							},
							' Previous '
						)
					),
					_react2.default.createElement(
						_reactNative.TouchableOpacity,
						{ style: styles.button, onPress: this.handleSubmit, __source: {
								fileName: _jsxFileName,
								lineNumber: 98
							}
						},
						_react2.default.createElement(
							_reactNative.Text,
							{ style: styles.buttonNext, __source: {
									fileName: _jsxFileName,
									lineNumber: 99
								}
							},
							' Next '
						)
					)
				)
			);
		}
	}]);
	return SignUpForm;
}(_react2.default.Component);

exports.default = SignUpForm;


var styles = _reactNative.StyleSheet.create({
	container: {
		padding: 30
	},

	input: {
		height: 45,
		backgroundColor: '#F5F5F5',
		marginBottom: 30,
		color: "#333333",
		borderRadius: 10,
		fontSize: 16
	},
	buttonContainer: {
		display: 'flex',
		flexDirection: 'row',
		justifyContent: 'space-around'

	},

	buttonNext: {
		backgroundColor: '#f55c54',
		paddingVertical: 15,
		color: '#F5F5F5',
		borderRadius: 10,
		padding: 37,
		textAlign: 'center',
		fontSize: 10
	},

	buttonPrevious: {
		backgroundColor: '#f55c54',
		paddingVertical: 15,
		color: '#F5F5F5',
		borderRadius: 10,
		padding: 37,
		textAlign: 'center',
		fontSize: 10
	},
	button: {
		width: 120
	}

});