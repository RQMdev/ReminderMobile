Object.defineProperty(exports, "__esModule", {
	value: true
});
var _jsxFileName = '/home/apprenant16/Bureau/Reminder/ReminderMobile/components/Dashboard/PickImage/index.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

var _expo = require('expo');

var _style = require('./style');

var PickImage = function (_React$Component) {
	babelHelpers.inherits(PickImage, _React$Component);

	function PickImage(props) {
		var _this2 = this;

		babelHelpers.classCallCheck(this, PickImage);

		var _this = babelHelpers.possibleConstructorReturn(this, (PickImage.__proto__ || Object.getPrototypeOf(PickImage)).call(this, props));

		_this._pickImage = function _callee() {
			var result;
			return regeneratorRuntime.async(function _callee$(_context) {
				while (1) {
					switch (_context.prev = _context.next) {
						case 0:
							_context.next = 2;
							return regeneratorRuntime.awrap(_expo.ImagePicker.launchImageLibraryAsync());

						case 2:
							result = _context.sent;

							console.log(result);

							if (result.cancelled) {
								_context.next = 8;
								break;
							}

							_context.next = 7;
							return regeneratorRuntime.awrap(_this.setState({ image: result.uri }));

						case 7:
							_this.props.setImage(_this.state.image);

						case 8:
						case 'end':
							return _context.stop();
					}
				}
			}, null, _this2);
		};

		_this.state = {
			image: null
		};
		return _this;
	}

	babelHelpers.createClass(PickImage, [{
		key: 'render',
		value: function render() {
			var image = this.state.image;


			return _react2.default.createElement(
				_reactNative.View,
				{
					__source: {
						fileName: _jsxFileName,
						lineNumber: 29
					}
				},
				_react2.default.createElement(_reactNativeElements.Button, {
					buttonStyle: _style.style.buttonChangeStatus,
					title: 'Choisir une image',
					onPress: this._pickImage,
					__source: {
						fileName: _jsxFileName,
						lineNumber: 30
					}
				})
			);
		}
	}]);
	return PickImage;
}(_react2.default.Component);

exports.default = PickImage;